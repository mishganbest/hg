<modification>
	<id>Different shipping for different categories / Разные доставки для разных категорий</id>
	<version>1.3</version>
	<vqmver>2.X</vqmver>
	<author>liveopencart.com / 19th19th.ru</author>
	<file name="/catalog/controller/checkout/cart.php">
		<operation>
			<search position="after"><![CDATA[$results = $this->model_setting_extension->getExtensions('shipping');]]></search>
			<add><![CDATA[// Different shipping for different categories / Разные доставки для разных категорий <<
			
			$this->load->model('catalog/product');
			$results_size_before = count($results);
			$results = $this->model_catalog_product->getCartProductsCategoriesShippings($results);
			if (count($results)==0 && $results_size_before != 0) {
				$noshipping_by_module = TRUE;
			}
			
			// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		<operation>
			<search position="replace"><![CDATA[$json['error']['warning'] = sprintf($this->language->get('error_no_shipping'), $this->url->link('information/contact'));]]></search>
			<add><![CDATA[			// Different shipping for different categories / Разные доставки для разных категорий
			
			$this->load->model('setting/setting');
			$mod_settings = $this->model_setting_setting->getSetting('categoryshipping');
			if (isset($noshipping_by_module) && $noshipping_by_module === TRUE
			&& isset($mod_settings['categoryshipping']['noshipinng_error']) && trim($mod_settings['categoryshipping']['noshipinng_error']) != "") {
				$json['error']['warning'] = $mod_settings['categoryshipping']['noshipinng_error'];
			} else {
				$json['error']['warning'] = sprintf($this->language->get('error_no_shipping'), $this->url->link('information/contact'));
			}
			
			// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		
	</file>
	
	
	
	<file name="/catalog/model/catalog/product.php">
		<operation>
			<search position="after"><![CDATA[class ModelCatalogProduct extends Model {]]></search>
			<add><![CDATA[// Different shipping for different categories / Разные доставки для разных категорий <<
	public function getCartProductsCategoriesShippings($results = "", $product_id="") {
		
		if ($results == "") {
			$results = $this->model_setting_extension->getExtensions('shipping');
		}
		
		$query = $this->db->query('SHOW TABLES LIKE "' . DB_PREFIX . 'category_shipping"');
		if($query->num_rows) {
		
			$skip_shippings = array();
			
			if ($product_id == "") {
				$products = $this->cart->getProducts();
			} else {
				$products = array( array('product_id'=>$product_id) );
			}
			
			
			$this->load->model('catalog/category');
			
			$all_categories = array();
			
			foreach ($products as $product) {
				
				$categories = $this->model_catalog_product->getCategories($product['product_id']);
				
				foreach ($categories as $category) {
					if (!in_array($category['category_id'], $all_categories)) {
						$all_categories[]=$category['category_id'];
					}
				}
				
			}
			
			foreach ($all_categories as $category_id) {
				$query = $this->db->query("SELECT E.code  FROM " . DB_PREFIX . "category_shipping CS, " . DB_PREFIX . "extension E WHERE E.extension_id = CS.extension_id AND category_id = '" . (int)$category_id . "'");
				
				$category_shippings = array();
				foreach ($query->rows as $row) {
					$category_shippings[] = $row['code'];
				}
				
				if (count($category_shippings) != 0) {
					foreach ($results as $result) {
						if ( !in_array( $result['code'], $category_shippings) && !in_array( $result['code'], $skip_shippings) ) {
							$skip_shippings[] = $result['code'];
						}
					}
				}
			}
			
			
			$new_results = array();
			foreach ($results as $result) {
				if (!in_array( $result['code'], $skip_shippings)) {
					$new_results[] = $result;
				}
			}
			
			
			if (count($new_results) == 0) {
				$this->load->model('setting/setting');
				$mod_settings = $this->model_setting_setting->getSetting('categoryshipping');
				
				if ( isset($mod_settings['categoryshipping']['replacement_shipping']) && (int)$mod_settings['categoryshipping']['replacement_shipping'] != 0) {
					$query = $this->db->query("SELECT E.*  FROM " . DB_PREFIX . "extension E WHERE E.extension_id = ".(int)$mod_settings['categoryshipping']['replacement_shipping'] );
					if ($query->num_rows) {
						$new_results[] = $query->row;
					}
				}
			}
			$results = $new_results;
			
		}
		return $results;
	}
	// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		
	<operation>
			<search position="after"><![CDATA[class ModelCatalogProduct extends Model {]]></search>
			<add><![CDATA[	// Different shipping for different categories / Разные доставки для разных категорий
	public function getProductShippingText($product_id) {
		
		$shipping_text = "";
		
		$this->load->model('setting/setting');
		$mod_settings = $this->model_setting_setting->getSetting('categoryshipping');
		if (is_array($mod_settings) && isset($mod_settings) && isset($mod_settings['categoryshipping'])
			&& isset($mod_settings['categoryshipping']['showshippingtocustomer']) && $mod_settings['categoryshipping']['showshippingtocustomer'] ) {
		
			$this->language->load('module/categoryshipping');
			$this->load->model('setting/extension');
			
			/*
			$categories = $this->model_catalog_product->getCategories($product['product_id']);
			foreach ($categories as $category) {
				if (!in_array($category['category_id'], $all_categories)) {
					$all_categories[]=$category['category_id'];
				}
			}
				
			//foreach ($categories as $category) {
		
			$query = $this->db->query("SELECT E.code  FROM " . DB_PREFIX . "category_shipping PS, " . DB_PREFIX . "extension E WHERE E.extension_id = PS.extension_id AND category_id = '" . (int)$product_id . "'");
			if ($query->num_rows) {
				$results = $query->rows;
			} else {
				$results = $this->model_setting_extension->getExtensions('shipping');
			}
			*/
			
			$results = $this->getCartProductsCategoriesShippings("", $product_id);
			
			foreach ($results as $result) {
				if ($this->config->get($result['code'] . '_status')) {
					
					$this->load->language('shipping/'.$result['code']);
					$shipping_text .= (($shipping_text=="")?(""):(", ")).$this->language->get('text_title');
					
				}
			}
			
			if ($shipping_text != "") {
				$shipping_text = $this->language->get('available_shipping').$shipping_text;
			}
		}
		
		return $shipping_text;
	}
	// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		
	</file>	
		

	<file name="/catalog/controller/checkout/quickcheckout_shipping.php">
		<operation>
			<search position="after"><![CDATA[$results = $this->model_setting_extension->getExtensions('shipping');]]></search>
			<add><![CDATA[// Different shipping for different categories / Разные доставки для разных категорий <<
			
			$this->load->model('catalog/product');
			$results = $this->model_catalog_product->getCartProductsCategoriesShippings($results);
			
			// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
	</file>
	<file name="/catalog/controller/checkout/simplecheckout_shipping.php" error="skip">
		<operation>
			<search position="after"><![CDATA[$results = $this->model_setting_extension->getExtensions('shipping');]]></search>
			<add><![CDATA[		// Different shipping for different categories / Разные доставки для разных категорий <<
			
		$this->load->model('catalog/product');
		$results = $this->model_catalog_product->getCartProductsCategoriesShippings($results);
			
		// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
	</file>
	<file name="/catalog/controller/checkout/checkout_two.php" error="skip">
		<operation>
						<search position="after"><![CDATA[$results = $this->model_setting_extension->getExtensions('shipping');]]></search>
						<add><![CDATA[		// 19th19th.ru <<

		$this->load->model('catalog/product');
		$results = $this->model_catalog_product->getCartProductsCategoriesShippings($results);

		// >> 19th19th.ru]]></add>
		</operation>
	</file>
	
	<file name="/admin/controller/catalog/category.php">
		<operation>
			<search position="before"><![CDATA[$this->load->model('design/layout');]]></search>
			<add><![CDATA[// Different shipping for different categories / Разные доставки для разных категорий <<
		$this->load->language('module/categoryshipping');
		$this->data['entry_categoryshipping'] = $this->language->get('entry_categoryshipping');
		
		
		$this->data['show_shippings'] = true;
	
		$this->data['shippings'] = array();
		
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "extension WHERE `type` = 'shipping'");
		
		$extensions = array();
		foreach ($query->rows as $row) {
			if ($this->config->get($row['code'] . '_status')) {
			$extensions[$row['code']] = $row['extension_id'];
			}
		}
		
		$files = glob(DIR_APPLICATION . 'controller/shipping/*.php');
		
		if ($files) {
			foreach ($files as $file) {
				$extension_code = basename($file, '.php');
				
				if (isset($extensions[$extension_code])) {
					$this->load->language('shipping/' . $extension_code);
					
					$this->data['shippings'][] = array('extension_id' => $extensions[$extension_code], 'name' => $this->language->get('heading_title'));
					
				}

			}
		}
		
		$query = $this->db->query('SHOW TABLES LIKE "' . DB_PREFIX . 'category_shipping"');
		if(!$query->num_rows) {
			$this->db->query('
				CREATE TABLE IF NOT EXISTS `' . DB_PREFIX . 'category_shipping` (
				`category_id` int(11) NOT NULL,
				`extension_id` int(11) NOT NULL,
				KEY `category_id` (`category_id`)
				) ENGINE=MyISAM DEFAULT CHARSET=utf8');
		}	
		
		$this->data['category_shippings'] = array();
		
		if (isset($this->request->get['category_id'])) {
			$query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "category_shipping` WHERE `category_id` = ".$this->request->get['category_id'] );
			foreach ($query->rows as $row) {
				$this->data['category_shippings'][] = $row['extension_id'];
			}
		}
			
		// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
	</file>
	<file name="/admin/model/catalog/category.php">
		<operation>
			<search position="after"><![CDATA[class ModelCatalogCategory extends Model {]]></search>
			<add><![CDATA[// Different shipping for different categories / Разные доставки для разных категорий <<
	private function editCategoryShippings($category_id, $data) {
		$query = $this->db->query('SHOW TABLES LIKE "' . DB_PREFIX . 'category_shipping"');
		if($query->num_rows) {

			
			$this->db->query("DELETE FROM " . DB_PREFIX . "category_shipping WHERE category_id = " . (int)$category_id );
			
			if (isset($data['category_shippings']) && is_array($data['category_shippings']) ) {
				foreach ($data['category_shippings'] as $extension_id) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "category_shipping SET category_id = " . (int)$category_id . ", extension_id = " . $extension_id);
				}
			}
		
		}	
	}
	// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[$category_id = $this->db->getLastId();]]></search>
			<add><![CDATA[		// Different shipping for different categories / Разные доставки для разных категорий <<
		$this->editCategoryShippings($category_id, $data);
		// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[public function editCategory($category_id, $data) {]]></search>
			<add><![CDATA[		// Different shipping for different categories / Разные доставки для разных категорий <<
		$this->editCategoryShippings($category_id, $data);
		// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
		<operation>
			<search position="after"><![CDATA[public function deleteCategory($category_id) {]]></search>
			<add><![CDATA[		// Different shipping for different categories / Разные доставки для разных категорий <<
		$query = $this->db->query('SHOW TABLES LIKE "' . DB_PREFIX . 'category_shipping"');
		if($query->num_rows) {
			$this->db->query("DELETE FROM " . DB_PREFIX . "category_shipping WHERE category_id = '" . (int)$category_id . "'");
		}	
		// >> Different shipping for different categories / Разные доставки для разных категорий]]></add>
		</operation>
	</file>
	<file name="/admin/view/template/catalog/category_form.tpl">
		<operation>
			<search position="after" offset="3"><![CDATA[<option value="0" selected="selected"><?php echo $text_disabled; ?></option>]]></search>
			<add><![CDATA[			<!-- Different shipping for different categories / Разные доставки для разных категорий << -->
			<?php if ($show_shippings) { ?>
			<tr>
              <td><?php echo $entry_categoryshipping; ?></td>
              <td><div class="scrollbox">
                  <?php $class = 'odd'; ?>
                  <?php foreach ($shippings as $shipping) { ?>
                  <?php $class = ($class == 'even' ? 'odd' : 'even'); ?>
                  <div class="<?php echo $class; ?>">
                    <?php if (in_array($shipping['extension_id'], $category_shippings)) { ?>
                    <input type="checkbox" name="category_shippings[]" value="<?php echo $shipping['extension_id']; ?>" checked="checked" />
                    <?php echo $shipping['name']; ?>
                    <?php } else { ?>
                    <input type="checkbox" name="category_shippings[]" value="<?php echo $shipping['extension_id']; ?>" />
                    <?php echo $shipping['name']; ?>
                    <?php } ?>
                  </div>
                  <?php } ?>
                </div></td>
            </tr>
			<?php } ?>
			<!-- >> Different shipping for different categories / Разные доставки для разных категорий -->]]></add>
		</operation>
	</file>
</modification>